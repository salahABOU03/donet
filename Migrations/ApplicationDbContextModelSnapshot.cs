// <auto-generated />
using System;
using Library.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Auteur", b =>
                {
                    b.Property<int>("id_a")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_a"));

                    b.Property<DateTime>("date_naissance")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_p")
                        .HasColumnType("int");

                    b.Property<string>("nom_a")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom_a")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_a");

                    b.ToTable("Auteur");
                });

            modelBuilder.Entity("Library.Models.Confirmation", b =>
                {
                    b.Property<int>("id_confirmation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_confirmation"));

                    b.Property<DateTime>("date_confirmation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_employe")
                        .HasColumnType("int");

                    b.Property<int?>("id_emprunt")
                        .HasColumnType("int");

                    b.Property<string>("status_confirmation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_confirmation");

                    b.ToTable("Confirmation");
                });

            modelBuilder.Entity("Library.Models.Employe", b =>
                {
                    b.Property<int>("id_employe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_employe"));

                    b.Property<string>("Logine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passworde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_employe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom_e")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_employe");

                    b.ToTable("Employe");
                });

            modelBuilder.Entity("Library.Models.Emprunt", b =>
                {
                    b.Property<int>("id_emp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_emp"));

                    b.Property<DateTime>("date_delai")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_emprunt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_inscrit")
                        .HasColumnType("int");

                    b.Property<int?>("id_l")
                        .HasColumnType("int");

                    b.HasKey("id_emp");

                    b.ToTable("Emprunt");
                });

            modelBuilder.Entity("Library.Models.Inscrit", b =>
                {
                    b.Property<int>("id_I")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_I"));

                    b.Property<string>("Logine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passworde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("date_naissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_i")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom_i")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_I");

                    b.ToTable("Inscrit");
                });

            modelBuilder.Entity("Library.Models.Livre", b =>
                {
                    b.Property<int>("id_l")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_l"));

                    b.Property<DateTime>("annee_l")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("fichier")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_auteur")
                        .HasColumnType("int");

                    b.Property<byte[]>("images")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("resume_l")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titre_l")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_l");

                    b.ToTable("Livre");
                });

            modelBuilder.Entity("Library.Models.Pays", b =>
                {
                    b.Property<int>("id_p")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_p"));

                    b.Property<string>("nom_p")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_p");

                    b.ToTable("Pays");
                });

            modelBuilder.Entity("Library.Models.TypesLivre", b =>
                {
                    b.Property<int>("id_t")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_t"));

                    b.Property<string>("libelle_T")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_t");

                    b.ToTable("TypeLivre");
                });
#pragma warning restore 612, 618
        }
    }
}
